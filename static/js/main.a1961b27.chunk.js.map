{"version":3,"sources":["content/notes/notes.js","content/weather/weather.js","utils/weather-data-transform.js","content/content.js","navbar/navbar.js","header/header.js","App.js","serviceWorker.js","index.js"],"names":["Note","props","handleChange","event","name","value","setState","prevState","note","state","title","text","id","bind","handleBlur","deleteNote","this","updateNote","className","onBlur","defaultValue","onChange","onClick","React","Component","appId","weather","setLang","setAPPID","lat","lon","city","Weather","weatherPrediction","data","key","day","icon","tempMin","tempMax","currentWeather","weatherType","toUpperCase","slice","currentTemp","humidity","windSpeed","dayOrNight","weatherData","getPrediction","fetch","then","response","json","transformedData","dailyWeather","usefulData","console","log","weekday","daily","map","currentDay","Date","dt","getDay","current","description","parseInt","temp","max","min","todayData","includes","wind_speed","transformData","latitude","longitude","Content","addNote","notesData","Math","floor","random","prev","item","filter","localStorage","JSON","parse","stringify","notesList","activeContent","length","Navbar","onMenuClicked","e","handleNavOptions","target","href","Header","isNavbarHidden","toggleNavbar","App","menu","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a1961b27.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\nimport './note.scss'\r\n\r\n\r\nclass Note extends React.Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        note : {\r\n        title: this.props.title,\r\n        text: this.props.text,\r\n        id: this.props.id\r\n        }\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n    this.deleteNote = this.deleteNote.bind(this);\r\n}\r\n\r\n  handleChange = event => {\r\n    const {name,value} = event;\r\n    this.setState(prevState => ({\r\n        note: {\r\n          ...prevState.note,\r\n          [name]: value\r\n        }\r\n      }));\r\n\r\n  }\r\n\r\n  handleBlur() {\r\n    this.props.updateNote(this.state.note);\r\n  }\r\n\r\n  deleteNote(id) {\r\n    this.props.deleteNote(this.state.note.id);\r\n  }\r\n\r\n  render() {\r\n    var componentName = \"note\";\r\n    const {title, text, id} = this.state.note;\r\n    return(\r\n      <Fragment>\r\n        <li className={`${componentName}`} onBlur={this.handleBlur}>\r\n          <textarea defaultValue={title} name=\"title\" onChange = {this.handleChange} className = {`${componentName}__title`}></textarea>\r\n        <textarea\r\n          defaultValue = {text}\r\n          name = \"text\"\r\n          className = {`${componentName}__text`}\r\n          onChange = {this.handleChange}>\r\n        </textarea>\r\n        <i className={`${componentName}__delete`} onClick = {()=>this.deleteNote(id)}></i>\r\n        </li>\r\n\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Note;","import React from \"react\";\r\nimport weather from \"openweather-apis\";\r\nimport \"./weather.scss\";\r\nimport \"./../../assets/weather-icons-master/css/weather-icons.css\";\r\nimport { transformData } from \"./../../utils/weather-data-transform\";\r\n\r\nlet url = \"https://api.ipdata.co/?api-key=0ddcadf5faa774a34944e157890a18cf75567d14812b16297f22f804\";\r\nlet appId = \"84c61d20a8a097b1fd8195c838ad28b7\";\r\nweather.setLang(\"en\");\r\nweather.setAPPID(appId);\r\nlet weatherUrl = \"https://api.openweathermap.org/data/2.5/onecall?\";\r\nlet lat, lon, city;\r\nlet componentName = \"weather\";\r\n\r\nclass Weather extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      weatherData: [],\r\n    };\r\n    this.getPrediction = this.getPrediction.bind(this);\r\n  }\r\n\r\n  getPrediction() {\r\n    fetch(\r\n      weatherUrl +\r\n        `lat=${lat}&lon=${lon}&%20exclude=hourly,daily&appid=${appId}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        let transformedData = transformData(data);\r\n        this.setState(() => {\r\n          return {\r\n            weatherData: transformedData,\r\n          };\r\n        });\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        lat = data.latitude;\r\n        lon = data.longitude;\r\n        city = data.city;\r\n        this.getPrediction();\r\n      });\r\n  }\r\n\r\n  weatherPrediction = (data) => {\r\n    return (\r\n      <div className={`${componentName}__predict-div`}>\r\n        <i key={data.day} className={`wi wi-predict wi-owm-${data.icon}`}></i>\r\n        <div>{data.day}</div>\r\n        <div>\r\n          Min: {data.tempMin} <i className=\"wi wi-celsius\"></i>\r\n        </div>\r\n        <div>\r\n          Max: {data.tempMax} <i className=\"wi wi-celsius\"></i>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  currentWeather = (data) => {\r\n    return (\r\n      <div className={`${componentName}__current-div`}>\r\n        <div className={`${componentName}__current-info`}>\r\n          <p className={`${componentName}__city-header`}>{city}</p>\r\n          <p className={`${componentName}__day-header`}>{data.day}</p>\r\n          <p className={`${componentName}__text`}>\r\n            {data.weatherType[0].toUpperCase() + data.weatherType.slice(1)}\r\n          </p>\r\n          <p className={`${componentName}__text`}>\r\n            {data.currentTemp}\r\n            <i className=\"wi wi-celsius\"></i>\r\n          </p>\r\n          <p className={`${componentName}__text`}>\r\n            {data.humidity} <i className=\"wi wi-humidity\"></i>\r\n          </p>\r\n          <p className={`${componentName}__text`}>\r\n            {data.windSpeed} <i className=\"wi wi-strong-wind\"></i>\r\n          </p>\r\n        </div>\r\n        <div className={`${componentName}__current-icon`}>\r\n          <i\r\n            key={data.day}\r\n            className={`wi wi-current wi-owm-${data.dayOrNight}${data.icon}`}\r\n          ></i>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return this.state.weatherData.map((data) =>\r\n      data.todayData ? this.currentWeather(data) : this.weatherPrediction(data)\r\n    );\r\n  }\r\n}\r\n\r\nexport default Weather;\r\n","export const transformData = (dailyWeather) => {\r\n  const usefulData = [];\r\n  console.log(dailyWeather);\r\n  const weekday = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n  dailyWeather.daily.map((weather)=> {\r\n    var currentDay = new Date(weather.dt*1000).getDay() === new Date().getDay();\r\n    usefulData[new Date(weather.dt*1000).getDay()] = {\r\n      day: weekday[new Date(weather.dt*1000).getDay()],\r\n      weatherType: currentDay ? dailyWeather.current.weather[0].description : weather.weather[0].description,\r\n      icon: currentDay ? dailyWeather.current.weather[0].id : weather.weather[0].id,\r\n      tempMax: parseInt(weather.temp.max - 273.15),\r\n      tempMin: parseInt(weather.temp.min - 273.15),\r\n      currentTemp:  currentDay ? parseInt(dailyWeather.current.temp - 273.15) : '',\r\n      humidity: weather.humidity,\r\n      todayData: currentDay,\r\n      dayOrNight: dailyWeather.current.weather[0].icon.includes('n')?'night-':'',\r\n      windSpeed: weather.wind_speed+' km/h'\r\n    }\r\n  })\r\n  return usefulData;\r\n}","import React, { Fragment } from 'react';\r\nimport Note from './notes/notes';\r\nimport Weather from './weather/weather';\r\nimport './content.scss';\r\n\r\nclass Content extends React.Component{\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      notesData: localStorage.notesData ?JSON.parse(localStorage.notesData) : []\r\n    }\r\n    this.addNote = this.addNote.bind(this);\r\n    this.updateNote = this.updateNote.bind(this);\r\n    this.deleteNote = this.deleteNote.bind(this);\r\n  }\r\n\r\n  addNote = () => {\r\n    this.setState({ notesData: [...this.state.notesData, {id: Math.floor(Math.random() * 10000) , text: 'Demo Text', title: 'Demo Title'}] });\r\n  }\r\n\r\n  updateNote = note => {\r\n    this.setState(prev => ({\r\n        notesData: prev.notesData.map(item => item.id === note.id ? { id: note.id, text: note.text, title: note.title } : item)\r\n    }))\r\n  }\r\n\r\n  deleteNote = id => {\r\n    console.log(id);\r\n    this.setState({notesData: this.state.notesData.filter(function(note) {\r\n      return note.id !== id\r\n  })});\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state);\r\n    let componentName = \"content\";\r\n    localStorage.notesData = JSON.stringify(this.state.notesData);\r\n    var notesList = this.state.notesData.map(\r\n        (note)=>\r\n        <Note\r\n          key={note.id}\r\n          id={note.id}\r\n          title={note.title}\r\n          text={note.text}\r\n          updateNote={this.updateNote}\r\n          deleteNote={this.deleteNote}\r\n        />);\r\n    return(\r\n      <div className={`${componentName}`}>\r\n        { this.props.activeContent === 'Notes' &&\r\n          <Fragment>\r\n          <button className={`${componentName}__button`} onClick={this.addNote}>Add Note</button>\r\n          </Fragment> }\r\n        { this.props.activeContent==='Notes' && this.state.notesData.length>0 &&\r\n          notesList}\r\n        { this.props.activeContent==='Notes' && this.state.notesData.length===0 &&\r\n          <Fragment>\r\n          <div className={`${componentName}__no-data`}></div>\r\n          <p className={`${componentName}__message`}>No Notes found. Click Add Note to add one</p>\r\n          </Fragment> }\r\n         {this.props.activeContent === 'Weather' &&\r\n          <Weather/>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Content;","import React from 'react';\r\nimport './navbar.scss'\r\n\r\nclass Navbar extends React.Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.onMenuClicked = this.onMenuClicked.bind(this);\r\n  }\r\n\r\n  onMenuClicked(e) {\r\n    this.props.handleNavOptions(e.target.text);\r\n  }\r\n\r\n  render() {\r\n    var componentName = \"sidenav\";\r\n    return(\r\n      <div className= {`${componentName}`}>\r\n        <a onClick = {this.onMenuClicked}>Notes</a>\r\n        <a onClick = {this.onMenuClicked}>Weather</a>\r\n        <a href=\"#\">Clients</a>\r\n        <a href=\"#\">Contact</a>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport './header.scss'\r\nimport Navbar from '../navbar/navbar';\r\n\r\n\r\nclass Header extends React.Component{\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isNavbarHidden: true\r\n    }\r\n    this.toggleNavbar = this.toggleNavbar.bind(this);\r\n  }\r\n\r\n  toggleNavbar() {\r\n    this.setState(prevState => {\r\n      return {\r\n        isNavbarHidden: !prevState.isNavbarHidden\r\n      }\r\n    })\r\n  }\r\n  render() {\r\n    var componentName = \"header\";\r\n    return(\r\n      <div className={`${componentName}__container`}>\r\n        <i className={`${componentName}__icon ${this.state.isNavbarHidden?`${componentName}__menu`:`${componentName}__close`}`} onClick={this.toggleNavbar}></i>\r\n\r\n        { !this.state.isNavbarHidden && <Navbar handleNavOptions = {this.props.handleNavOptions}/> }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Content from './content/content';\r\nimport Header from './header/header';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor() {\r\n\r\n    super();\r\n\r\n    this.state = {\r\n      activeContent: 'Weather'\r\n    }\r\n  }\r\n  handleNavOptions= (menu) => {\r\n    this.setState(()=>{\r\n      return {\r\n        activeContent: menu\r\n      }\r\n    })\r\n}\r\n\r\n  render () {\r\n    return (\r\n    <div className=\"container\">\r\n      <Header handleNavOptions = {this.handleNavOptions} className=\"header\"/>\r\n      <Content activeContent = {this.state.activeContent} className=\"content\"/>\r\n    </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}